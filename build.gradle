import org.ajoberstar.grgit.Grgit

buildscript {
    ext {
        kotlinVersion = '1.3.21'
        springBootVersion = '2.1.0.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }

}

plugins {
    id "org.ajoberstar.grgit" version "3.0.0"
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    mavenCentral()
}
springBoot {
    buildInfo()
}
version = "0.3.1" + getVersionNameExtension()

def getVersionNameExtension() {
    def versionPropsFile = file('version')
    def versionBuild

    if (versionPropsFile.canRead()) {
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        versionBuild = versionProps['VERSION_BUILD'].toInteger() + 1
        versionProps['VERSION_BUILD'] = versionBuild.toString()
        versionProps.store(versionPropsFile.newWriter(), null)

        try {
            def git = Grgit.open()
            def versionNameSuffix = "-${git.head().getAbbreviatedId(8)}"
            git.close()
            return "$versionBuild$versionNameSuffix"
        } catch (ignored) {
            return ""
        }
    }else return ""
}


dependencies {
    implementation('org.springframework.boot:spring-boot-starter')
    compile group: 'org.springframework.integration', name: 'spring-integration-ip', version: '5.1.1.RELEASE'
    compile group: 'org.springframework.integration', name: 'spring-integration-core', version: '5.1.1.RELEASE'
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-springsecurity5', version: '3.0.4.RELEASE'
    compile group: 'org.springframework.security', name: 'spring-security-core', version: '5.1.1.RELEASE'
    compile group: 'org.springframework.security', name: 'spring-security-web', version: '5.1.1.RELEASE'
    compile group: 'org.springframework.security', name: 'spring-security-config', version: '5.1.1.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.1.0.RELEASE'
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.6"
    compile group: 'org.springframework.cloud', name: 'spring-cloud-gateway-mvc', version: '2.0.2.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf', version: '2.1.0.RELEASE'
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("org.jetbrains.kotlin:kotlin-reflect")
    testImplementation('org.springframework.boot:spring-boot-starter-test')
}
